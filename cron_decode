CREATE FUNCTION dbo.cron_decode
(
        @cron VARCHAR(MAX),
        @format CHAR(10) = '2345671SUN',
        @fromtime DATETIME2(0),
        @totime DATETIME2(0)
)
RETURNS TABLE
AS
RETURN  WITH cteCron(theSecond, theMinute, theHour, theDayOfMonth, theMonth, theDayOfWeek, theYear, theDefaultDayOfWeek, theRollingWeek)
        AS (
                SELECT  LTRIM(RTRIM(MAX(CASE WHEN src.[key] = 0 THEN src.value ELSE '' END))) AS theSecond,
                        LTRIM(RTRIM(MAX(CASE WHEN src.[key] = 1 THEN src.value ELSE '' END))) AS theMinute,
                        LTRIM(RTRIM(MAX(CASE WHEN src.[key] = 2 THEN src.value ELSE '' END))) AS theHour,
                        LTRIM(RTRIM(MAX(CASE WHEN src.[key] = 3 THEN src.value ELSE '' END))) AS theDayOfMonth,
                        LTRIM(RTRIM(MAX(CASE WHEN src.[key] = 4 THEN REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(src.value), 'JAN', ' 1 '), 'FEB', ' 2 '), 'MAR', ' 3 '), 'APR', ' 4 '), 'MAY', ' 5 '), 'JUN', ' 6 '), 'JUL', ' 7 '), 'AUG', ' 8 '), 'SEP', ' 9 '), 'OCT', ' 10 '), 'NOV', ' 11 '), 'DEC', ' 12 ') ELSE '' END))) AS theMonth,
                        LTRIM(RTRIM(MAX(CASE WHEN src.[key] = 5 THEN REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(src.value), 'MON', CONCAT(' ', SUBSTRING(@format, 1, 1), ' ')), 'TUW', CONCAT(' ', SUBSTRING(@format, 2, 1), ' ')), 'WED', CONCAT(' ', SUBSTRING(@format, 3, 1), ' ')), 'THU', CONCAT(' ', SUBSTRING(@format, 4, 1), ' ')), 'FRI', CONCAT(' ', SUBSTRING(@format, 5, 1), ' ')), 'SAT', CONCAT(' ', SUBSTRING(@format, 6, 1), ' ')), 'SUN', CONCAT(' ', SUBSTRING(@format, 7, 1), ' ')) ELSE '' END))) AS theDayOfWeek,
                        LTRIM(RTRIM(MAX(CASE WHEN src.[key] = 6 THEN src.value ELSE '*' END))) AS theYear,
                        CASE
                                WHEN UPPER(SUBSTRING(@format, 8, 3)) = 'MON' THEN 1
                                WHEN UPPER(SUBSTRING(@format, 8, 3)) = 'TUE' THEN 2
                                WHEN UPPER(SUBSTRING(@format, 8, 3)) = 'WED' THEN 3
                                WHEN UPPER(SUBSTRING(@format, 8, 3)) = 'THU' THEN 4
                                WHEN UPPER(SUBSTRING(@format, 8, 3)) = 'FRI' THEN 5
                                WHEN UPPER(SUBSTRING(@format, 8, 3)) = 'SAT' THEN 6
                                WHEN UPPER(SUBSTRING(@format, 8, 3)) = 'SUN' THEN 7
                                ELSE ''
                        END AS theDefaultDayOfWeek,
                        CASE
                                WHEN UPPER(SUBSTRING(@format, 8, 3)) = 'MON' THEN SUBSTRING(SUBSTRING(@format, 1, 7) + SUBSTRING(@format, 1, 1), 1, 7)
                                WHEN UPPER(SUBSTRING(@format, 8, 3)) = 'TUE' THEN SUBSTRING(SUBSTRING(@format, 2, 6) + SUBSTRING(@format, 1, 2), 1, 7)
                                WHEN UPPER(SUBSTRING(@format, 8, 3)) = 'WED' THEN SUBSTRING(SUBSTRING(@format, 3, 5) + SUBSTRING(@format, 1, 3), 1, 7)
                                WHEN UPPER(SUBSTRING(@format, 8, 3)) = 'THU' THEN SUBSTRING(SUBSTRING(@format, 4, 4) + SUBSTRING(@format, 1, 4), 1, 7)
                                WHEN UPPER(SUBSTRING(@format, 8, 3)) = 'FRI' THEN SUBSTRING(SUBSTRING(@format, 5, 3) + SUBSTRING(@format, 1, 5), 1, 7)
                                WHEN UPPER(SUBSTRING(@format, 8, 3)) = 'SAT' THEN SUBSTRING(SUBSTRING(@format, 6, 2) + SUBSTRING(@format, 1, 6), 1, 7)
                                WHEN UPPER(SUBSTRING(@format, 8, 3)) = 'SUN' THEN SUBSTRING(SUBSTRING(@format, 7, 1) + SUBSTRING(@format, 1, 7), 1, 7)
                                ELSE ''
                        END AS theRollingWeek
                FROM    OPENJSON(CONCAT('["', REPLACE(REPLACE(REPLACE(REPLACE(LTRIM(RTRIM(@cron)), ' ', '<>'), '><', ''), '<>', ' '), ' ', '","'), '"]')) AS src
                WHERE   @cron > ''
                        AND UPPER(@format) LIKE '[0-7][0-7][0-7][0-7][0-7][0-7][0-7][A-Z][A-Z][A-Z]'
                        AND UPPER(SUBSTRING(@format, 8, 3)) IN ('MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN')
                        AND CHARINDEX(SUBSTRING(@format, 1, 1), SUBSTRING(@format, 2, 6)) = 0
                        AND CHARINDEX(SUBSTRING(@format, 2, 1), SUBSTRING(@format, 3, 5)) = 0
                        AND CHARINDEX(SUBSTRING(@format, 3, 1), SUBSTRING(@format, 4, 4)) = 0
                        AND CHARINDEX(SUBSTRING(@format, 4, 1), SUBSTRING(@format, 5, 3)) = 0
                        AND CHARINDEX(SUBSTRING(@format, 5, 1), SUBSTRING(@format, 6, 2)) = 0
                        AND CHARINDEX(SUBSTRING(@format, 6, 1), SUBSTRING(@format, 7, 1)) = 0
                        AND @fromtime BETWEEN '1970-01-01 00:00:00' AND @totime
                        AND @totime BETWEEN @fromtime AND '9999-12-31 23:59:59'
        )
        SELECT          DATETIME2FROMPARTS(y.number, m.number, d.number, h.number, n.number, s.number, 0, 0) AS crontime
        FROM            cteCron AS cte
        CROSS APPLY     dbo.decode_range_expression(cte.theYear, 1970, 9999, 1970, DATEPART(YEAR, @fromtime), DATEPART(YEAR, @totime)) AS y
        CROSS APPLY     (
                                SELECT  w.number,
                                        CASE
                                                WHEN w.number IN (1, 3, 5, 7, 8, 10, 12) THEN 31
                                                WHEN w.number IN (4, 6, 9, 11) THEN 30
                                                ELSE 28 + ISDATE(CONCAT(y.number, '-02-29'))
                                        END AS myMonthDays
                                FROM    dbo.decode_range_expression(cte.theMonth, 1, 12, 1, 1, 12) AS w
                        ) AS m
        CROSS APPLY     dbo.decode_range_expression(cte.theHour, 0, 23, 0, 0, 23) AS h
        CROSS APPLY     dbo.decode_range_expression(cte.theMinute, 0, 59, 0, 0, 59) AS n
        CROSS APPLY     dbo.decode_range_expression(cte.theSecond, 0, 59, 0, 0, 59) AS s
        CROSS APPLY     (
                                SELECT  w.number
                                FROM    dbo.decode_range_expression(cte.theDayOfWeek, 1, m.myMonthDays, 1, 1, m.myMonthDays) AS w
                                WHERE   cte.theDayOfMonth = '?'
                                        AND cte.theDayOfWeek = '*'

                                UNION ALL

                                SELECT          w.number
                                FROM            (
                                                        SELECT  CHARINDEX(SUBSTRING(cte.theRollingWeek, w.number, 1), SUBSTRING(@format, 1, 7)) AS offset
                                                        FROM    dbo.decode_range_expression(cte.theDayOfWeek, 0, 7, cte.theDefaultDayOfWeek, 1, 7) AS w
                                                        WHERE   cte.theDayOfMonth = '?'
                                                                AND cte.theDayOfWeek LIKE '%[-/,0123456789]%'
                                                                AND cte.theDayOfWeek NOT LIKE '%[#L*]%'
                                                ) AS src
                                CROSS APPLY     dbo.decode_range_expression('*', 1, m.myMonthDays, 1, 1, m.myMonthDays) AS w
                                WHERE           1 + DATEDIFF(DAY, '19000101', DATEFROMPARTS(y.number, m.number, w.number)) % 7 = src.offset

                                UNION ALL

                                SELECT  w.number
                                FROM    dbo.decode_range_expression(cte.theDayOfMonth, 1, m.myMonthDays, 1, 1, m.myMonthDays) AS w
                                WHERE   cte.theDayOfMonth LIKE '%[-/,0123456789]%'
                                        AND cte.theDayOfMonth NOT LIKE '%[WL*]%'
                                        AND cte.theDayOfWeek = '?'

                                UNION ALL

                                SELECT          w.number
                                FROM            (
                                                        SELECT  TRY_CAST(SUBSTRING(cte.theDayOfMonth, 3, 2) AS INT) AS offset
                                                        WHERE   TRY_CAST(SUBSTRING(cte.theDayOfMonth, 3, 2) AS INT) BETWEEN 0 AND 30
                                                                AND cte.theDayOfWeek = '?'
                                                                AND     (
                                                                                cte.theDayOfMonth LIKE 'L-[0-9]'
                                                                                OR cte.theDayOfMonth LIKE 'L-[0-9][0-9]'
                                                                        )
                                                ) AS src
                                CROSS APPLY     dbo.decode_range_expression(m.myMonthDays - src.offset, m.myMonthDays - src.offset, m.myMonthDays - src.offset, 1, 1, m.myMonthDays) AS w

                                UNION ALL

                                SELECT  m.myMonthDays
                                WHERE   cte.theDayOfMonth = 'L'
                                        AND cte.theDayOfWeek = '?'

                                UNION ALL

                                SELECT  MAX(w.number)
                                FROM    dbo.decode_range_expression('*', m.myMonthDays - 2, m.myMonthDays, m.myMonthDays - 2, m.myMonthDays - 2, m.myMonthDays) AS w
                                WHERE   cte.theDayOfMonth = 'LW'
                                        AND cte.theDayOfWeek = '?'
                                        AND DATEDIFF(DAY, '19000101', DATEFROMPARTS(y.number, m.number, w.number)) % 7 <= 4
                                HAVING  MAX(w.number) IS NOT NULL

                                UNION ALL

                                SELECT          MAX(w.number)
                                FROM            (
                                                        SELECT  CHARINDEX(CAST(TRY_CAST(SUBSTRING(cte.theDayOfWeek, 1, 1) AS INT) AS CHAR(1)), SUBSTRING(@format, 1, 7)) AS day_of_week
                                                        WHERE   CHARINDEX(CAST(TRY_CAST(SUBSTRING(cte.theDayOfWeek, 1, 1) AS INT) AS CHAR(1)), SUBSTRING(@format, 1, 7)) BETWEEN 1 AND 7
                                                                AND cte.theDayOfWeek LIKE '[0-9]L'
                                                                AND cte.theDayOfMonth = '?'
                                                ) AS src
                                CROSS APPLY     dbo.decode_range_expression('*', m.myMonthDays - 6, m.myMonthDays, m.myMonthDays - 6, m.myMonthDays - 6, m.myMonthDays) AS w
                                WHERE           1 + DATEDIFF(DAY, '19000101', DATEFROMPARTS(y.number, m.number, w.number)) % 7 = src.day_of_week
                                HAVING          MAX(w.number) IS NOT NULL

                                UNION ALL

                                SELECT TOP(1)   w.number
                                FROM            (
                                                        SELECT  TRY_CAST(REPLACE(cte.theDayOfMonth, 'W', '') AS INT) AS offset
                                                        WHERE   TRY_CAST(REPLACE(cte.theDayOfMonth, 'W', '') AS INT) BETWEEN 1 AND 31
                                                                AND cte.theDayOfWeek = '?'
                                                                AND cte.theDayOfMonth LIKE '%W'
                                                ) AS src
                                CROSS APPLY     dbo.decode_range_expression('*', src.offset - 1, src.offset + 1, src.offset - 1, 1, m.myMonthDays) AS w
                                WHERE           DATEDIFF(DAY, '19000101', DATEFROMPARTS(y.number, m.number, w.number)) % 7 <= 4
                                ORDER BY        ABS(src.offset - w.number)
                                
                                UNION ALL

                                SELECT          w.number
                                FROM            (
                                                        SELECT  CHARINDEX(CAST(TRY_CAST(SUBSTRING(cte.theDayOfWeek, 1, 1) AS INT) AS CHAR(1)), SUBSTRING(@format, 1, 7)) AS day_of_week,
                                                                TRY_CAST(SUBSTRING(cte.theDayOfWeek, 3, 1) AS TINYINT) AS nth
                                                        WHERE   CHARINDEX(CAST(TRY_CAST(SUBSTRING(cte.theDayOfWeek, 1, 1) AS INT) AS CHAR(1)), SUBSTRING(@format, 1, 7)) BETWEEN 1 AND 7
                                                                AND TRY_CAST(SUBSTRING(cte.theDayOfWeek, 3, 1) AS TINYINT) BETWEEN 1 AND 5
                                                                AND cte.theDayOfWeek LIKE '[0-7]#[1-5]'
                                                                AND cte.theDayOfMonth = '?'
                                                ) AS src
                                CROSS APPLY     dbo.decode_range_expression('*', 7 * src.nth - 6, 7 * src.nth, 7 * src.nth - 6, 1, m.myMonthDays) AS w
                                WHERE           1 + DATEDIFF(DAY, '19000101', DATEFROMPARTS(y.number, m.number, w.number)) % 7 = src.day_of_week
                        ) AS d(number, yak)
        WHERE           cte.theSecond > ''
                        AND cte.theMinute > ''
                        AND cte.theHour > ''
                        AND cte.theDayOfMonth > ''
                        AND cte.theMonth > ''
                        AND cte.theDayOfWeek > ''
                        AND cte.theYear > '';
GO
